package flutter:renderer;

interface enums {
	variant main-axis-alignment {
		start,
		end,
		center,
		space-between,
		space-around,
		space-evenly,
	}

	variant text-direction {
		rtl,
		ltr,
	}

	variant vertical-direction {
		up,
		down,
	}

	variant main-axis-size {
		min,
		max,
	}

	variant text-baseline {
		alphabetic,
		ideographic,
	}

	variant cross-axis-alignment {
		start,
		end,
		center,
		stretch,
		baseline,
	}
}

interface alignment {
	resource alignment {
		constructor(start: f64, y: f64);
	}

	resource alignment-directional {
		constructor(start: f64, y: f64);
	}

	variant alignment-geometry {
		alignment(alignment),
		alignment-directional(alignment-directional),
	}
}

interface widget {
	use alignment.{alignment-geometry};
	use enums.{
		cross-axis-alignment,
		main-axis-alignment,
		main-axis-size,
		text-direction,
		text-baseline,
		vertical-direction,
	};

	resource row {
		constructor(
			children: list<widget>,

			cross-axis-alignment: option<cross-axis-alignment>,

			main-axis-alignment: option<main-axis-alignment>,
			main-axis-size: option<main-axis-size>,

			text-direction: option<text-direction>,
			text-baseline: option<text-baseline>,

			vertical-direction: option<vertical-direction>,
		);
	}

	resource col {
		constructor(
			children: list<widget>,

			cross-axis-alignment: option<cross-axis-alignment>,

			main-axis-alignment: option<main-axis-alignment>,
			main-axis-size: option<main-axis-size>,

			text-direction: option<text-direction>,
			text-baseline: option<text-baseline>,

			vertical-direction: option<vertical-direction>,
		);
	}

	resource text {
		constructor(
			data: string,
			// TODO: the rest
		);
	}

	resource text-rich {
		// TODO: rich
		constructor();
	}

	variant widget {
		col(col),
		row(row),
		text(text),
		text-rich(text-rich),
	}
}

interface renderer {
	use widget.{widget};

	variant error {
		common,
	}

	resource renderer {
		render: func(widget: widget) -> option<error>;
	}
}

world plugin {
	use renderer.{renderer, error};
	export run: func(renderer: renderer) -> option<error>;
}
